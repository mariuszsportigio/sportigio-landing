---
// Navbar.astro
export interface Props {
  activePage?: string;
}

const { activePage } = Astro.props;
---

<nav class="fixed top-0 w-full z-50 bg-white/90 backdrop-blur-lg border-b border-gray-200/50">
  <div class="max-w-7xl mx-auto px-4">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2 group">
          <img src="/sportigio-logo-black.png" alt="Sportigio" class="h-8 w-auto group-hover:scale-110 transition-transform duration-300" />
        </a>
      </div>

      <!-- Desktop Navigation (simplified) -->
      <div class="hidden lg:flex items-center space-x-8">
        <a href="/" class="text-sm text-gray-600 hover:text-[#0B2360] font-medium transition-colors duration-200">Strona główna</a>
        <a href="/kitchen-sink" class="text-sm text-gray-600 hover:text-[#0B2360] font-medium transition-colors duration-200">Kitchen Sink</a>
        <a href="/pricing" class="text-sm text-gray-600 hover:text-[#0B2360] font-medium transition-colors duration-200">Cennik</a>
        <a href="/blog" class={`text-sm font-medium transition-colors duration-200 ${
          activePage === 'blog' ? 'text-[#0B2360]' : 'text-gray-600 hover:text-[#0B2360]'
        }`}>
          Blog
        </a>
      </div>

      <!-- Desktop CTA Buttons -->
      <div class="hidden lg:flex items-center space-x-4">
        <button class="btn-style-1 px-5 py-2 text-sm text-white font-semibold rounded-xl hover:scale-105 transition-all duration-200 shadow-lg">
          Rozpocznij za darmo
        </button>
      </div>

      <!-- Mobile Menu Button -->
      <div class="lg:hidden">
        <button id="mobile-menu-button" class="p-2 rounded-lg text-gray-700 hover:bg-gray-100 transition-colors duration-200">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu (simplified) -->
  <div id="mobile-menu" class="lg:hidden hidden bg-white border-t border-gray-200">
    <div class="px-4 py-3 space-y-3">
      <a href="/" class="block py-2 text-sm text-gray-700 hover:text-[#0B2360] font-medium transition-colors duration-200">Strona główna</a>
      <a href="/kitchen-sink" class="block py-2 text-sm text-gray-700 hover:text-[#0B2360] font-medium transition-colors duration-200">Kitchen Sink</a>
      <a href="/pricing" class="block py-2 text-sm text-gray-700 hover:text-[#0B2360] font-medium transition-colors duration-200">Cennik</a>
      <a href="/blog" class={`block py-2 text-sm font-medium transition-colors duration-200 ${
        activePage === 'blog' ? 'text-[#0B2360]' : 'text-gray-700 hover:text-[#0B2360]'
      }`}>Blog</a>

      <!-- Mobile CTA Button -->
      <div class="pt-3">
        <button class="btn-style-1 w-full py-2 text-sm text-white font-semibold rounded-xl hover:scale-105 transition-all duration-200 shadow-lg">
          Rozpocznij za darmo
        </button>
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile and desktop menu functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    // Mobile menu toggle
    mobileMenuButton?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });

    // Close mobile menu when clicking on links
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (event) => {
      if (!mobileMenuButton?.contains(event.target) && !mobileMenu?.contains(event.target)) {
        mobileMenu?.classList.add('hidden');
      }
    });

    // Navbar scroll effect
    let lastScrollY = 0;
    const navbar = document.querySelector('nav');
    
    window.addEventListener('scroll', () => {
      const currentScrollY = window.scrollY;
      
      if (currentScrollY > 100) {
        navbar?.classList.add('shadow-lg');
      } else {
        navbar?.classList.remove('shadow-lg');
      }
      
      lastScrollY = currentScrollY;
    });
  });
</script> 