---
import { defaultLanguage, getTranslations, type Language } from "../i18n";

interface ExampleItem {
    id: string;
    title: string;
    imageSrc: string;
    imageAlt?: string;
    href: string;
}

interface Props {
    lang?: Language;
    title?: string;
    subtitle?: string;
    buttonLabel?: string;
    items?: ExampleItem[];
}

const {
    lang = defaultLanguage,
    title: titleOverride,
    subtitle: subtitleOverride,
    buttonLabel: buttonOverride,
    items: itemsOverride,
} = Astro.props as Props;

const baseExamples: ExampleItem[] = [
    {
        id: "wisla",
        title: "Wisła Kraków",
        imageSrc: "/screens/wisla-krakow-mobile.webp",
        imageAlt: "Wisła Kraków - podgląd strony mobilnej",
        href: "https://wislakrakow.com",
    },
    {
        id: "legia",
        title: "Legia Koszykówka",
        imageSrc: "/screens/legia-kosz-mobile.webp",
        imageAlt: "Legia - podgląd strony mobilnej",
        href: "https://legiakosz.com",
    },
    {
        id: "mks",
        title: "MKS Będzin",
        imageSrc: "/screens/mks-bedzin-mobile.webp",
        imageAlt: "MKS Będzin - podgląd strony mobilnej",
        href: "https://mksbedzin.pl",
    },
    {
        id: "panthers",
        title: "Panthers Wrocław",
        imageSrc: "/screens/panthers-wroclaw-mobile.webp",
        imageAlt: "Panthers Wrocław - podgląd strony mobilnej",
        href: "https://pantherswroclaw.com",
    },
];

const translations = getTranslations(lang) as any;
const fallbackTranslations =
    lang === defaultLanguage ? translations : (getTranslations(defaultLanguage) as any);

const sectionCopy = (translations?.pages?.website?.examples ?? {}) as any;
const fallbackSectionCopy = (fallbackTranslations?.pages?.website?.examples ?? {}) as any;
const fallbackItems = (fallbackSectionCopy.items ?? {}) as Record<string, any>;

const resolvedTitle =
    titleOverride ??
    sectionCopy.title ??
    fallbackSectionCopy.title ??
    "Przykłady realizacji";

const resolvedSubtitle =
    subtitleOverride ??
    sectionCopy.subtitle ??
    fallbackSectionCopy.subtitle ??
    "Wybrane wdrożenia w klubach sportowych";

const resolvedButtonLabel =
    buttonOverride ??
    sectionCopy.button ??
    fallbackSectionCopy.button ??
    "Odwiedź stronę";

const resolvedItems = (itemsOverride ?? baseExamples).map((item) => {
    const overrideItem = (sectionCopy.items ?? {})[item.id] ?? fallbackItems[item.id] ?? {};
    const fallbackItem = fallbackItems[item.id] ?? {};
    return {
        ...item,
        title: overrideItem.title ?? fallbackItem.title ?? item.title,
        imageAlt:
            overrideItem.imageAlt ??
            fallbackItem.imageAlt ??
            item.imageAlt ??
            item.title,
    } satisfies ExampleItem;
});
---

<section class="py-16 bg-white">
    <div class="max-w-6xl mx-auto px-4">
        <div class="mb-8 text-center">
            <h2 class="text-2xl lg:text-3xl font-black text-gray-900 font-poppins">
                {resolvedTitle}
            </h2>
            <p class="text-gray-600 mt-3">{resolvedSubtitle}</p>
        </div>

        <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
            {resolvedItems.map((ex) => (
                <div class="flex flex-col items-center">
                    <div class="aspect-[9/16] w-full max-w-[240px] overflow-hidden">
                        <img
                            src={ex.imageSrc}
                            alt={ex.imageAlt}
                            class="h-full w-full object-contain rounded-xl shadow-md"
                            loading="lazy"
                            decoding="async"
                        />
                    </div>
                    <h3 class="text-sm font-semibold text-gray-900 mt-3 text-center">
                        {ex.title}
                    </h3>
                    <a
                        href={ex.href}
                        class="btn-style-1 mt-2 px-4 py-2 text-sm font-semibold rounded-lg text-white inline-flex items-center gap-2"
                        target="_blank"
                        rel="noopener noreferrer"
                    >
                        <span>{resolvedButtonLabel}</span>
                        <svg
                            class="w-4 h-4"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M9 5l7 7-7 7"
                            />
                        </svg>
                    </a>
                </div>
            ))}
        </div>
    </div>
</section>
